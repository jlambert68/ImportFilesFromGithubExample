		// Tengo script to create an array of 10 random numbers

		rand := import("rand")
		math := import("math")
		fmt := import("fmt")

		// Define the length of the array
		length := 20
		numberOfDecimals := 2
		maxIntegerPartSize := 2


        // ***********************************************************************************
        // round
        // Function to round a float to a specific number of decimal places
        round := func(x, places) {
            shift := math.pow(10, places)
            return math.floor(x * shift + 0.5) / shift
        }

        // ***********************************************************************************



        // ***********************************************************************************
        // formatFloat
        // Function to format a float with a specific number of decimals
        formatFloat := func(number, numberOfDecimals) {
            str := string(number) // Convert the number to a string

            // Find the position of the decimal point
            dotIndex := -1
            for i := 0; i < len(str); i++ {
                if str[i] == '.' {
                    dotIndex = i
                    break
                }
            }

            // Add a decimal point if it doesn't exist
            if numberOfDecimals > 0 {
                if dotIndex == -1 {
                    dotIndex = len(str)
                    str += "."
                }
            }


            // Calculate the number of decimal places currently in the string
            currentDecimals := len(str) - dotIndex - 1


            // Add zeros to reach the desired number of decimal places
            for currentDecimals < numberOfDecimals {
                str = str + "0"
                currentDecimals++
            }


            return str
        }

        // ***********************************************************************************




		// ***********************************************************************************
		// randomize
		// Function to generate random numbers
		randomize := func(testCaseUuidRandomizer, index, maxIntegerPartSize, numberOfDecimals) {
		    rand.seed(testCaseUuidRandomizer + index)

		    // Generate Integer part of random number
		    randomIntegerPart :=  rand.float()

		    integerPart := math.floor(math.pow(10, maxIntegerPartSize) * randomIntegerPart)


		    // Generate Decimal part of random number
		    randomDecimalPart :=  rand.float()

		    decimalPart := 0

		    if numberOfDecimals > 0 {

		         decimalPart = math.floor(math.pow(10, numberOfDecimals) * randomDecimalPart)
		    }


		    // Combine Integer and decimal part into one random number
		    randomNumber := integerPart + math.pow(10, -1 * numberOfDecimals) * decimalPart


            randomNumber = round(randomNumber, numberOfDecimals)

			return randomNumber
		}

		// ***********************************************************************************


		// Create an empty array
		array := []

		// Fill the array to the desired length
		for i := 0; i < length; i++ {
    		array = append(array, "")  // Initialize with default value (e.g., 0)
		}

		tempValueAsFloat := 0.0

		// Fill the array with random numbers
		for i, v in array {       // array: index and element
            // 'i' is index
             // 'v' is value
             tempValueAsFloat = randomize(0, i, maxIntegerPartSize, numberOfDecimals)


             array[i] = formatFloat(tempValueAsFloat, numberOfDecimals)


        }

         // ***********************************************************************************
		// SubCustody_RandomFloatValue_ArrayValue // SubCustody.RandomFloatValue[n](maxIntegerPartSize, numberOfDecimals)
		// SHA256("SubCustody.RandomFloatValue[") = "090c013dbc0b7ca817dca2d1371a74f2f3edf4631327b7de3f3bdcfd297da275"
		// 090c013dbc
		// Function to generate random value with a specif max number of integer and speciic number of decimals

        SubCustody_RandomFloatValue_ArrayValue_InputParameters := func() {


            inputParametersArray := [
                "testCaseUuidRandomizer_090c013dbc",
                "arrayPosition_090c013dbc",
                "maxIntegerPartSize_090c013dbc",
                "numberOfDecimals_090c013dbc"]


        }


        SubCustody_RandomFloatValue_ArrayValue := func(testCaseUuidRandomizer_090c013dbc, arrayPosition_090c013dbc, maxIntegerPartSize_090c013dbc, numberOfDecimals_090c013dbc) {

            testCaseUuidRandomizer := testCaseUuidRandomizer_090c013dbc
            arrayPosition := arrayPosition_090c013dbc
            maxIntegerPartSize := maxIntegerPartSize_090c013dbc
            numberOfDecimals := numberOfDecimals_090c013dbc


            // From users perspektive, position "0" is the number "1"
            arrayPosition = arrayPosition - 1

            if arrayPosition < 0 {
                arrayPosition = 0
            }

            // Generate Random number based on array position
            tempValueAsFloat = randomize(testCaseUuidRandomizer_090c013dbc, arrayPosition_090c013dbc, maxIntegerPartSize_090c013dbc, numberOfDecimals_090c013dbc )

            // Format the value into a string
             out1 := formatFloat(tempValueAsFloat, numberOfDecimals)

             return out1

        }


        // ***********************************************************************************



        // ***********************************************************************************
		// SubCustody_RandomFloatValue // SubCustody.RandomFloatValue(maxIntegerPartSize, numberOfDecimals)
		// SHA256("SubCustody.RandomFloatValue(" = "44a5fa671578800d412bd60c650ab7070d3826a61fd18f31d69045b96efbc61b"
		// 44a5fa6715
		// Function to generate random value with a specif max number of integer and speciic number of decimals
		// Always use arrau value 1, first array position from user perspective

          SubCustody_RandomFloatValue_InputParameters := func() {


        inputParametersArray := [
            "testCaseUuidRandomizer_44a5fa6715",
            "maxIntegerPartSize_44a5fa6715",
            "numberOfDecimals_44a5fa6715"]


        }


        SubCustody_RandomFloatValue := func(testCaseUuidRandomizer_44a5fa6715, maxIntegerPartSize_44a5fa6715, numberOfDecimals_44a5fa6715) {

            out1 := SubCustody_RandomFloatValue_ArrayValue(testCaseUuidRandomizer_44a5fa6715, 1, maxIntegerPartSize_44a5fa6715, numberOfDecimals_44a5fa6715)

            return out1


        }


        // ***********************************************************************************


		// Output the array
		fmt.println(array)

		fmt.println(SubCustody_RandomFloatValue(0, numberOfDecimals, maxIntegerPartSize))

		fmt.println(SubCustody_RandomFloatValue_ArrayValue(0, 3, numberOfDecimals, maxIntegerPartSize))

		fmt.println(SubCustody_RandomFloatValue(1, numberOfDecimals, maxIntegerPartSize))

		fmt.println(SubCustody_RandomFloatValue_ArrayValue(1, 3, numberOfDecimals, maxIntegerPartSize))



